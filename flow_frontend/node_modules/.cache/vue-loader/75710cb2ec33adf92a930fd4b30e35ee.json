{"remainingRequest":"W:\\ArtificialIntelligenceOpenPlatformOfNankaiUniversity\\MachineLearningAlgorithmPlatform\\flow_frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!W:\\ArtificialIntelligenceOpenPlatformOfNankaiUniversity\\MachineLearningAlgorithmPlatform\\flow_frontend\\src\\components\\DetailPanel\\components\\visualization.vue?vue&type=script&lang=js&","dependencies":[{"path":"W:\\ArtificialIntelligenceOpenPlatformOfNankaiUniversity\\MachineLearningAlgorithmPlatform\\flow_frontend\\src\\components\\DetailPanel\\components\\visualization.vue","mtime":1592804685683},{"path":"W:\\ArtificialIntelligenceOpenPlatformOfNankaiUniversity\\MachineLearningAlgorithmPlatform\\flow_frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"W:\\ArtificialIntelligenceOpenPlatformOfNankaiUniversity\\MachineLearningAlgorithmPlatform\\flow_frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"W:\\ArtificialIntelligenceOpenPlatformOfNankaiUniversity\\MachineLearningAlgorithmPlatform\\flow_frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"W:\\ArtificialIntelligenceOpenPlatformOfNankaiUniversity\\MachineLearningAlgorithmPlatform\\flow_frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport fileApi from '@/api/file'\r\nimport { Notification } from 'element-ui'\r\nimport { mapGetters } from 'vuex'\r\nimport visualizeEcharts from './visualizeEcharts';\r\n\r\nexport default {\r\n  name: 'visual-file',\r\n  props: {\r\n    node_id: {\r\n      type: String\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      csv: [\r\n        [1, 3, true, 4, 5, 8],\r\n        [2, 1, false, 1, 3, 0],\r\n        [3, 1, false, 2, 1, 1],\r\n        [9, 1, true, 1, 2, 0],\r\n        [7, 4, true, 2, 5, 2]\r\n      ],\r\n      index: [],\r\n      loading: false,\r\n      canPreview: false,\r\n      canProceed: false,\r\n      multipleSelection: [],\r\n      pid: '',\r\n    }\r\n  },\r\n  components: {\r\n    visualizeEcharts\r\n  },\r\n  created() {\r\n    if (this.node_id == null) {\r\n      this.canPreview = false\r\n    } else {\r\n      fileApi.isPreviewValid({ nodeId: this.node_id, graphId: this.graphId }).then(res => {\r\n        this.canPreview = res.data\r\n      })\r\n    }\r\n  },\r\n  computed: {\r\n    isShowVisual: {\r\n      get() {\r\n        var show = this.$store.getters.isShowVisual\r\n        if (show) {\r\n          this.loading = true\r\n          fileApi\r\n            .previewCsv({ nodeId: this.node_id, graphId: this.graphId, transit: true })\r\n            .then(res => {\r\n              var csv = res.data\r\n              csv.forEach((row, i) => {\r\n                csv[i] = [i+1].concat(row)\r\n              })\r\n              this.csv = csv\r\n              this.pid = res.pid\r\n              this.index = ['\\\\'].concat(res.index)\r\n              this.loading = false\r\n            })\r\n            .catch(err => {\r\n              this.loading = false\r\n              this.isShowPreview = false\r\n              Notification({\r\n                title: '错误',\r\n                message: '文件不存在或文件路径不正确',\r\n                type: 'error',\r\n                duration: 3000\r\n              })\r\n            })\r\n        }\r\n        return show\r\n      },\r\n      set(val) {\r\n        this.$store.commit('app/SET_ISSHOWVISUAL', val)\r\n      }\r\n    },\r\n    isShowEcharts: {\r\n      get() {\r\n        return this.$store.getters.isShowEcharts\r\n      },\r\n      set(val) {\r\n        this.$store.commit('app/SET_ISSHOWECHARTS', val)\r\n      }\r\n    },\r\n    graphId: {\r\n      get() {\r\n        return this.$route.params.id || this.$store.getters.graphId\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    handleSelectionChange(val, row) {\r\n      this.multipleSelection = val\r\n      var canProceed = true\r\n      val.forEach(row => {\r\n        if (typeof row[1] == 'string') {\r\n          canProceed = false\r\n        }\r\n      })\r\n      this.canProceed = canProceed\r\n    }\r\n  }\r\n}\r\n",null]}