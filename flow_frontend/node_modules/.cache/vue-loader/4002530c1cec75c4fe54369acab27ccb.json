{"remainingRequest":"W:\\ArtificialIntelligenceOpenPlatformOfNankaiUniversity\\MachineLearningAlgorithmPlatform\\flow_frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!W:\\ArtificialIntelligenceOpenPlatformOfNankaiUniversity\\MachineLearningAlgorithmPlatform\\flow_frontend\\src\\components\\Minimap\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"W:\\ArtificialIntelligenceOpenPlatformOfNankaiUniversity\\MachineLearningAlgorithmPlatform\\flow_frontend\\src\\components\\Minimap\\index.vue","mtime":1592804685687},{"path":"W:\\ArtificialIntelligenceOpenPlatformOfNankaiUniversity\\MachineLearningAlgorithmPlatform\\flow_frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"W:\\ArtificialIntelligenceOpenPlatformOfNankaiUniversity\\MachineLearningAlgorithmPlatform\\flow_frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"W:\\ArtificialIntelligenceOpenPlatformOfNankaiUniversity\\MachineLearningAlgorithmPlatform\\flow_frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"W:\\ArtificialIntelligenceOpenPlatformOfNankaiUniversity\\MachineLearningAlgorithmPlatform\\flow_frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport Minimap from '@antv/g6/build/minimap'\r\nimport eventBus from '@/utils/eventBus'\r\nimport { mapGetters } from 'vuex'\r\nexport default {\r\n  data() {\r\n    return {\r\n      minimap: null,\r\n      graph: null\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapGetters(['detailWidth', 'canvasWidth', 'canvasHeight'])\r\n  },\r\n  watch: {\r\n    // detailWidth(width) {\r\n    //   let height = Math.floor((width * this.canvasHeight) / this.canvasWidth)\r\n    //   console.log(width, height);\r\n    //   const cfgs = {\r\n    //     size: [width, height],\r\n    //     container: 'minimap'\r\n    //   }\r\n    //   this.minimap = new Minimap({ ...cfgs })\r\n    // }\r\n  },\r\n  created() {\r\n    this.bindEvent()\r\n  },\r\n  mounted() {\r\n    this.$nextTick(() => {\r\n      this.initMinmap()\r\n    })\r\n  },\r\n  methods: {\r\n    initMinmap() {\r\n      let width = this.detailWidth\r\n      let height = (this.detailWidth * this.canvasHeight) / this.canvasWidth\r\n      height = 150\r\n      const cfgs = {\r\n        size: [width, height],\r\n        container: 'minimap'\r\n      }\r\n      this.minimap = new Minimap({ ...cfgs })\r\n    },\r\n    bindEvent() {\r\n      eventBus.$on('afterAddPage', page => {\r\n        this.graph = page.graph\r\n        this.bindPage()\r\n      })\r\n    },\r\n    bindPage() {\r\n      if (!this.minimap || !this.graph) {\r\n        return\r\n      }\r\n      this.graph.addPlugin(this.minimap)\r\n    }\r\n  }\r\n}\r\n",null]}