{"remainingRequest":"W:\\ArtificialIntelligenceOpenPlatformOfNankaiUniversity\\MachineLearningAlgorithmPlatform\\flow_frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!W:\\ArtificialIntelligenceOpenPlatformOfNankaiUniversity\\MachineLearningAlgorithmPlatform\\flow_frontend\\src\\views\\register\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"W:\\ArtificialIntelligenceOpenPlatformOfNankaiUniversity\\MachineLearningAlgorithmPlatform\\flow_frontend\\src\\views\\register\\index.vue","mtime":1592804685699},{"path":"W:\\ArtificialIntelligenceOpenPlatformOfNankaiUniversity\\MachineLearningAlgorithmPlatform\\flow_frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"W:\\ArtificialIntelligenceOpenPlatformOfNankaiUniversity\\MachineLearningAlgorithmPlatform\\flow_frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"W:\\ArtificialIntelligenceOpenPlatformOfNankaiUniversity\\MachineLearningAlgorithmPlatform\\flow_frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"W:\\ArtificialIntelligenceOpenPlatformOfNankaiUniversity\\MachineLearningAlgorithmPlatform\\flow_frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nexport default {\r\n  data() {\r\n    let checkUserName = (rule, value, cb) => {\r\n      if (!value) {\r\n        return cb(new Error(\"用户名不能为空！\"));\r\n      } else {\r\n        cb(); // 将判断传递给后面\r\n      }\r\n    };\r\n    let checkPassword = (rule, value, cb) => {\r\n      if (!value) {\r\n        return cb(new Error(\"密码不能为空！\"));\r\n      } else if (value.length < 6) {\r\n        return cb(new Error(\"密码不能小于6位数！\"));\r\n      } else {\r\n        cb();\r\n      }\r\n    };\r\n    let checkPasswordAgain = (rule, value, cb) => {\r\n      if (!value) {\r\n        return cb(new Error(\"密码不能为空！\"));\r\n      } else if (value !== this.formRegister.password) {\r\n        return cb(new Error(\"密码不匹配！\"));\r\n      } else if (value.length < 6) {\r\n        return cb(new Error(\"密码不能小于6位数！\"));\r\n      } else {\r\n        cb();\r\n      }\r\n    };\r\n    return {\r\n      formRegister: {\r\n        username: \"\",\r\n        password: \"\",\r\n        checkPassword: \"\"\r\n      },\r\n      rules: {\r\n        username: [{ validator: checkUserName, trigger: \"blur\" }],\r\n        password: [{ validator: checkPassword, trigger: \"blur\" }],\r\n        checkPassword: [{ validator: checkPasswordAgain, trigger: \"blur\" }]\r\n      },\r\n      loading: false\r\n    };\r\n  },\r\n  methods: {\r\n    // 用户注册\r\n    register() {\r\n      let user = this.formRegister;\r\n      let formData = {\r\n        name: user.name,\r\n        username: user.username,\r\n        password: user.password\r\n      };\r\n      // 表单验证\r\n      this.$refs[\"formRegister\"].validate(valid => {\r\n        if (valid) {\r\n          this.loading = true;\r\n          // 通过验证之后才请求登录接口\r\n          this.$store\r\n            .dispatch(\"user/Register\", formData)\r\n            .then(() => {\r\n              this.loading = false;\r\n              this.$router.push({ path: \"/\" });\r\n            })\r\n            .catch(e => {\r\n              this.loading = false;\r\n            });\r\n        } else {\r\n          this.$message.error(\"error submit!!\");\r\n          return false;\r\n        }\r\n      });\r\n    }\r\n  }\r\n};\r\n",null]}