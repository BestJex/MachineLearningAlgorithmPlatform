{"remainingRequest":"W:\\ArtificialIntelligenceOpenPlatformOfNankaiUniversity\\MachineLearningAlgorithmPlatform\\flow_frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!W:\\ArtificialIntelligenceOpenPlatformOfNankaiUniversity\\MachineLearningAlgorithmPlatform\\flow_frontend\\src\\views\\login\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"W:\\ArtificialIntelligenceOpenPlatformOfNankaiUniversity\\MachineLearningAlgorithmPlatform\\flow_frontend\\src\\views\\login\\index.vue","mtime":1592804685698},{"path":"W:\\ArtificialIntelligenceOpenPlatformOfNankaiUniversity\\MachineLearningAlgorithmPlatform\\flow_frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"W:\\ArtificialIntelligenceOpenPlatformOfNankaiUniversity\\MachineLearningAlgorithmPlatform\\flow_frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"W:\\ArtificialIntelligenceOpenPlatformOfNankaiUniversity\\MachineLearningAlgorithmPlatform\\flow_frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"W:\\ArtificialIntelligenceOpenPlatformOfNankaiUniversity\\MachineLearningAlgorithmPlatform\\flow_frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nexport default {\r\n  data() {\r\n    let checkUserName = (rule, value, cb) => {\r\n      if (!value) {\r\n        return cb(new Error(\"用户名不能为空！\"));\r\n      } else {\r\n        cb(); // 将判断传递给后面\r\n      }\r\n    };\r\n    let checkPassword = (rule, value, cb) => {\r\n      if (!value) {\r\n        return cb(new Error(\"密码不能为空！\"));\r\n      } else {\r\n        cb();\r\n      }\r\n    };\r\n    return {\r\n      formLogin: {\r\n        username: \"\",\r\n        password: \"\",\r\n        checked: false,\r\n\r\n        redirect: undefined,\r\n        otherQuery: {}\r\n      },\r\n      rules: {\r\n        username: [{ validator: checkUserName, trigger: \"blur\" }],\r\n        password: [{ validator: checkPassword, trigger: \"blur\" }]\r\n      },\r\n      loading: false\r\n    };\r\n  },\r\n  watch: {\r\n    $route: {\r\n      handler: function(route) {\r\n        const query = route.query\r\n        if (query) {\r\n          this.redirect = query.redirect\r\n          this.otherQuery = this.getOtherQuery(query)\r\n        }\r\n      },\r\n      immediate: true\r\n    }\r\n  },\r\n  methods: {\r\n    // 向登录接口发起请求\r\n    login() {\r\n      let user = this.formLogin;\r\n      let formData = {\r\n        username: user.username,\r\n        password: user.password\r\n      };\r\n      // 表单验证\r\n      this.$refs[\"formLogin\"].validate(valid => {\r\n        if (valid) {\r\n          this.loading = true;\r\n          // 通过验证之后才请求登录接口\r\n          this.$store\r\n            .dispatch(\"user/Login\", formData)\r\n            .then(() => {\r\n              this.loading = false;\r\n              this.$router.push({ path: this.redirect || '/', query: this.otherQuery });\r\n            })\r\n            .catch(e => {\r\n              this.loading = false;\r\n            });\r\n        } else {\r\n          this.$message.error(\"error submit!!\");\r\n          return false;\r\n        }\r\n      });\r\n    },\r\n    getOtherQuery(query) {\r\n      return Object.keys(query).reduce((acc, cur) => {\r\n        if (cur !== 'redirect') {\r\n          acc[cur] = query[cur]\r\n        }\r\n        return acc\r\n      }, {})\r\n    }\r\n  }\r\n};\r\n",null]}