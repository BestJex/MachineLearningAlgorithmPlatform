{"remainingRequest":"W:\\ArtificialIntelligenceOpenPlatformOfNankaiUniversity\\MachineLearningAlgorithmPlatform\\flow_frontend\\node_modules\\babel-loader\\lib\\index.js!W:\\ArtificialIntelligenceOpenPlatformOfNankaiUniversity\\MachineLearningAlgorithmPlatform\\flow_frontend\\node_modules\\eslint-loader\\index.js??ref--13-0!W:\\ArtificialIntelligenceOpenPlatformOfNankaiUniversity\\MachineLearningAlgorithmPlatform\\flow_frontend\\src\\store\\getters.js","dependencies":[{"path":"W:\\ArtificialIntelligenceOpenPlatformOfNankaiUniversity\\MachineLearningAlgorithmPlatform\\flow_frontend\\src\\store\\getters.js","mtime":1592804685692},{"path":"W:\\ArtificialIntelligenceOpenPlatformOfNankaiUniversity\\MachineLearningAlgorithmPlatform\\flow_frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"W:\\ArtificialIntelligenceOpenPlatformOfNankaiUniversity\\MachineLearningAlgorithmPlatform\\flow_frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"W:\\ArtificialIntelligenceOpenPlatformOfNankaiUniversity\\MachineLearningAlgorithmPlatform\\flow_frontend\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["var getters = {\n  isFocusCanvas: function isFocusCanvas(state) {\n    return state.app.is_focus_canvas;\n  },\n  canvasWidth: function canvasWidth(state) {\n    return state.app.canvas_width;\n  },\n  canvasHeight: function canvasHeight(state) {\n    return state.app.canvas_height;\n  },\n  detailWidth: function detailWidth(state) {\n    return state.app.detailpannel_width;\n  },\n  itemWidth: function itemWidth(state) {\n    return state.app.itempannel_width;\n  },\n  isAllowDrop: function isAllowDrop(state) {\n    return state.app.allow_drop;\n  },\n  isAllowSave: function isAllowSave(state) {\n    return state.app.allow_save;\n  },\n  selectedNodeId: function selectedNodeId(state) {\n    return state.app.selected_node_id;\n  },\n  isRunning: function isRunning(state) {\n    return state.app.is_running;\n  },\n  docWidth: function docWidth(state) {\n    return state.app.document_width;\n  },\n  docHeight: function docHeight(state) {\n    return state.app.document_height;\n  },\n  tbHeight: function tbHeight(state) {\n    return state.app.topbar_height;\n  },\n  fileList: function fileList(state) {\n    return state.app.file_list;\n  },\n  nodeList: function nodeList(state) {\n    return state.app.node_list;\n  },\n  categories: function categories(state) {\n    return state.app.category;\n  },\n  isShowPreview: function isShowPreview(state) {\n    return state.app.is_show_preview;\n  },\n  isShowVisual: function isShowVisual(state) {\n    return state.app.is_show_visual;\n  },\n  isShowEcharts: function isShowEcharts(state) {\n    return state.app.is_show_echarts;\n  },\n  graphId: function graphId(state) {\n    return state.app.graph_id;\n  },\n  token: function token(state) {\n    return state.user.token;\n  },\n  username: function username(state) {\n    return state.user.username;\n  }\n};\nexport default getters;",null]}