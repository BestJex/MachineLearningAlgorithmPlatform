{"remainingRequest":"W:\\南开大学人工智能开放平台\\MachineLearningAlgorithmPlatform\\flow_frontend\\node_modules\\babel-loader\\lib\\index.js!W:\\南开大学人工智能开放平台\\MachineLearningAlgorithmPlatform\\flow_frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!W:\\南开大学人工智能开放平台\\MachineLearningAlgorithmPlatform\\flow_frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!W:\\南开大学人工智能开放平台\\MachineLearningAlgorithmPlatform\\flow_frontend\\src\\components\\ItemPanel\\item.vue?vue&type=script&lang=js&","dependencies":[{"path":"W:\\南开大学人工智能开放平台\\MachineLearningAlgorithmPlatform\\flow_frontend\\src\\components\\ItemPanel\\item.vue","mtime":1592804685686},{"path":"W:\\南开大学人工智能开放平台\\MachineLearningAlgorithmPlatform\\flow_frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"W:\\南开大学人工智能开放平台\\MachineLearningAlgorithmPlatform\\flow_frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"W:\\南开大学人工智能开放平台\\MachineLearningAlgorithmPlatform\\flow_frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"W:\\南开大学人工智能开放平台\\MachineLearningAlgorithmPlatform\\flow_frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.number.constructor\";\nimport \"core-js/modules/es6.regexp.split\";\nimport _defineProperty from \"W:\\\\\\u5357\\u5F00\\u5927\\u5B66\\u4EBA\\u5DE5\\u667A\\u80FD\\u5F00\\u653E\\u5E73\\u53F0\\\\MachineLearningAlgorithmPlatform\\\\flow_frontend\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport eventBus from '@/utils/eventBus';\nimport bgImg from '@/assets/bg.jpg';\nimport item from '@/statics/item';\nimport { mapGetters } from 'vuex';\nimport graphApi from '@/api/graph';\nexport default {\n  data: function data() {\n    return {\n      page: null,\n      command: null,\n      offsetX: 0,\n      offsetY: 0,\n      tree_list: item.tree_list,\n      defaultProps: {\n        children: 'children',\n        label: 'name'\n      }\n    };\n  },\n  computed: _objectSpread({}, mapGetters(['isAllowDrop', 'nodeList'])),\n  created: function created() {\n    this.bindEvent();\n  },\n  methods: {\n    handleElDragStart: function handleElDragStart(node, e) {\n      this.offsetX = e.offsetX;\n      this.offsetY = e.offsetY;\n    },\n    handleElDragEnd: function handleElDragEnd(node, _node, p, e) {\n      if (this.isAllowDrop) {\n        var _item = JSON.parse(JSON.stringify(node.data));\n\n        _item.template_id = _item.id;\n        var data = {};\n        Object.assign(data, _item); // data.offsetX = this.offsetX\n        // data.offsetY = this.offsetY\n\n        if (this.page) {\n          var graph = this.page.graph; // const size = e.target.dataset.size.split(\"*\");\n\n          var xy = graph.getPointByClient(e.x, e.y);\n          data.x = xy.x;\n          data.y = xy.y;\n          data.size = _item.size.split('*').map(Number);\n          data.type = 'node';\n          this.command.executeCommand('add', [data]);\n        }\n\n        this.$store.commit('app/SET_ALLOWDROP', false);\n      }\n    },\n    allowDrag: function allowDrag(node) {\n      return !node.data.is_menu;\n    },\n    allowDrop: function allowDrop(node, _node, type) {\n      return false;\n    },\n    bindEvent: function bindEvent() {\n      var _this = this;\n\n      eventBus.$on('afterAddPage', function (page) {\n        _this.page = page;\n        _this.command = page.command;\n      });\n    }\n  }\n};",null]}