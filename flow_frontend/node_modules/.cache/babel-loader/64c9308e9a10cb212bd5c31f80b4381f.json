{"remainingRequest":"W:\\ArtificialIntelligenceOpenPlatformOfNankaiUniversity\\MachineLearningAlgorithmPlatform\\flow_frontend\\node_modules\\babel-loader\\lib\\index.js!W:\\ArtificialIntelligenceOpenPlatformOfNankaiUniversity\\MachineLearningAlgorithmPlatform\\flow_frontend\\node_modules\\eslint-loader\\index.js??ref--13-0!W:\\ArtificialIntelligenceOpenPlatformOfNankaiUniversity\\MachineLearningAlgorithmPlatform\\flow_frontend\\src\\behavior\\hover-node.js","dependencies":[{"path":"W:\\ArtificialIntelligenceOpenPlatformOfNankaiUniversity\\MachineLearningAlgorithmPlatform\\flow_frontend\\src\\behavior\\hover-node.js","mtime":1592804685680},{"path":"W:\\ArtificialIntelligenceOpenPlatformOfNankaiUniversity\\MachineLearningAlgorithmPlatform\\flow_frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"W:\\ArtificialIntelligenceOpenPlatformOfNankaiUniversity\\MachineLearningAlgorithmPlatform\\flow_frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"W:\\ArtificialIntelligenceOpenPlatformOfNankaiUniversity\\MachineLearningAlgorithmPlatform\\flow_frontend\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.find\";\nexport default {\n  getEvents: function getEvents() {\n    return {\n      'node:mouseover': 'onMouseover',\n      'node:mouseleave': 'onMouseleave',\n      \"node:mousedown\": \"onMousedown\"\n    };\n  },\n  onMouseover: function onMouseover(e) {\n    var self = this;\n    var item = e.item;\n    var graph = self.graph;\n    var group = item.getContainer();\n    group.find(function (g) {\n      if (g._attrs.isOutPointText) {\n        g.attr('opacity', 0.5);\n      }\n    });\n\n    if (e.target._attrs.isOutPointOut || e.target._attrs.isOutPoint) {\n      group.find(function (g) {\n        if (g._attrs.isInPoint || g._attrs.isOutPoint) {\n          g.attr(\"fill\", \"#fff\");\n        }\n\n        if (g._attrs.isOutPoint) {\n          if (g._attrs.id === e.target._attrs.parent) {\n            group.find(function (gr) {\n              if (gr._attrs.id === g._attrs.id) {\n                gr.attr('fill', \"#1890ff\");\n                gr.attr('opacity', 1);\n              }\n            });\n          }\n\n          if (g._attrs.id === e.target._attrs.id) {\n            g.attr(\"fill\", \"#1890ff\");\n            g.attr('opacity', 1);\n          }\n        }\n      });\n      e.target.attr(\"cursor\", \"crosshair\");\n      this.graph.paint();\n    }\n\n    if (item.hasState('selected')) {// return\n    } else {\n      if (self.shouldUpdate.call(self, e)) {\n        graph.setItemState(item, 'hover', true);\n      }\n    }\n\n    graph.paint();\n  },\n  onMouseleave: function onMouseleave(e) {\n    var self = this;\n    var item = e.item;\n    var graph = self.graph;\n    var group = item.getContainer();\n    group.find(function (g) {\n      if (g._attrs.isOutPointText) {\n        g.attr('opacity', 0);\n      }\n    });\n    group.find(function (g) {\n      if (g._attrs.isInPoint || g._attrs.isOutPoint) {\n        g.attr(\"fill\", \"#fff\");\n      }\n    });\n\n    if (self.shouldUpdate.call(self, e)) {\n      if (!item.hasState('selected')) graph.setItemState(item, 'hover', false);\n    }\n\n    graph.paint();\n  },\n  onMousedown: function onMousedown(e) {\n    if (e.target._attrs.isOutPoint || e.target._attrs.isOutPointOut) {\n      this.graph.setMode('addEdge');\n    } else {// this.graph.setMode('moveNode')\n    }\n  }\n};",null]}