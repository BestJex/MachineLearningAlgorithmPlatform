{"remainingRequest":"W:\\ArtificialIntelligenceOpenPlatformOfNankaiUniversity\\MachineLearningAlgorithmPlatform\\flow_frontend\\node_modules\\babel-loader\\lib\\index.js!W:\\ArtificialIntelligenceOpenPlatformOfNankaiUniversity\\MachineLearningAlgorithmPlatform\\flow_frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!W:\\ArtificialIntelligenceOpenPlatformOfNankaiUniversity\\MachineLearningAlgorithmPlatform\\flow_frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!W:\\ArtificialIntelligenceOpenPlatformOfNankaiUniversity\\MachineLearningAlgorithmPlatform\\flow_frontend\\src\\views\\login\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"W:\\ArtificialIntelligenceOpenPlatformOfNankaiUniversity\\MachineLearningAlgorithmPlatform\\flow_frontend\\src\\views\\login\\index.vue","mtime":1592804685698},{"path":"W:\\ArtificialIntelligenceOpenPlatformOfNankaiUniversity\\MachineLearningAlgorithmPlatform\\flow_frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"W:\\ArtificialIntelligenceOpenPlatformOfNankaiUniversity\\MachineLearningAlgorithmPlatform\\flow_frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"W:\\ArtificialIntelligenceOpenPlatformOfNankaiUniversity\\MachineLearningAlgorithmPlatform\\flow_frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"W:\\ArtificialIntelligenceOpenPlatformOfNankaiUniversity\\MachineLearningAlgorithmPlatform\\flow_frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  data: function data() {\n    var checkUserName = function checkUserName(rule, value, cb) {\n      if (!value) {\n        return cb(new Error(\"用户名不能为空！\"));\n      } else {\n        cb(); // 将判断传递给后面\n      }\n    };\n\n    var checkPassword = function checkPassword(rule, value, cb) {\n      if (!value) {\n        return cb(new Error(\"密码不能为空！\"));\n      } else {\n        cb();\n      }\n    };\n\n    return {\n      formLogin: {\n        username: \"\",\n        password: \"\",\n        checked: false,\n        redirect: undefined,\n        otherQuery: {}\n      },\n      rules: {\n        username: [{\n          validator: checkUserName,\n          trigger: \"blur\"\n        }],\n        password: [{\n          validator: checkPassword,\n          trigger: \"blur\"\n        }]\n      },\n      loading: false\n    };\n  },\n  watch: {\n    $route: {\n      handler: function handler(route) {\n        var query = route.query;\n\n        if (query) {\n          this.redirect = query.redirect;\n          this.otherQuery = this.getOtherQuery(query);\n        }\n      },\n      immediate: true\n    }\n  },\n  methods: {\n    // 向登录接口发起请求\n    login: function login() {\n      var _this = this;\n\n      var user = this.formLogin;\n      var formData = {\n        username: user.username,\n        password: user.password\n      }; // 表单验证\n\n      this.$refs[\"formLogin\"].validate(function (valid) {\n        if (valid) {\n          _this.loading = true; // 通过验证之后才请求登录接口\n\n          _this.$store.dispatch(\"user/Login\", formData).then(function () {\n            _this.loading = false;\n\n            _this.$router.push({\n              path: _this.redirect || '/',\n              query: _this.otherQuery\n            });\n          }).catch(function (e) {\n            _this.loading = false;\n          });\n        } else {\n          _this.$message.error(\"error submit!!\");\n\n          return false;\n        }\n      });\n    },\n    getOtherQuery: function getOtherQuery(query) {\n      return Object.keys(query).reduce(function (acc, cur) {\n        if (cur !== 'redirect') {\n          acc[cur] = query[cur];\n        }\n\n        return acc;\n      }, {});\n    }\n  }\n};",null]}