{"remainingRequest":"W:\\ArtificialIntelligenceOpenPlatformOfNankaiUniversity\\MachineLearningAlgorithmPlatform\\flow_frontend\\node_modules\\babel-loader\\lib\\index.js!W:\\ArtificialIntelligenceOpenPlatformOfNankaiUniversity\\MachineLearningAlgorithmPlatform\\flow_frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!W:\\ArtificialIntelligenceOpenPlatformOfNankaiUniversity\\MachineLearningAlgorithmPlatform\\flow_frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!W:\\ArtificialIntelligenceOpenPlatformOfNankaiUniversity\\MachineLearningAlgorithmPlatform\\flow_frontend\\src\\components\\DetailPanel\\components\\visualization.vue?vue&type=script&lang=js&","dependencies":[{"path":"W:\\ArtificialIntelligenceOpenPlatformOfNankaiUniversity\\MachineLearningAlgorithmPlatform\\flow_frontend\\src\\components\\DetailPanel\\components\\visualization.vue","mtime":1592804685683},{"path":"W:\\ArtificialIntelligenceOpenPlatformOfNankaiUniversity\\MachineLearningAlgorithmPlatform\\flow_frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"W:\\ArtificialIntelligenceOpenPlatformOfNankaiUniversity\\MachineLearningAlgorithmPlatform\\flow_frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"W:\\ArtificialIntelligenceOpenPlatformOfNankaiUniversity\\MachineLearningAlgorithmPlatform\\flow_frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"W:\\ArtificialIntelligenceOpenPlatformOfNankaiUniversity\\MachineLearningAlgorithmPlatform\\flow_frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport fileApi from '@/api/file';\nimport { Notification } from 'element-ui';\nimport { mapGetters } from 'vuex';\nimport visualizeEcharts from \"./visualizeEcharts\";\nexport default {\n  name: 'visual-file',\n  props: {\n    node_id: {\n      type: String\n    }\n  },\n  data: function data() {\n    return {\n      csv: [[1, 3, true, 4, 5, 8], [2, 1, false, 1, 3, 0], [3, 1, false, 2, 1, 1], [9, 1, true, 1, 2, 0], [7, 4, true, 2, 5, 2]],\n      index: [],\n      loading: false,\n      canPreview: false,\n      canProceed: false,\n      multipleSelection: [],\n      pid: ''\n    };\n  },\n  components: {\n    visualizeEcharts: visualizeEcharts\n  },\n  created: function created() {\n    var _this = this;\n\n    if (this.node_id == null) {\n      this.canPreview = false;\n    } else {\n      fileApi.isPreviewValid({\n        nodeId: this.node_id,\n        graphId: this.graphId\n      }).then(function (res) {\n        _this.canPreview = res.data;\n      });\n    }\n  },\n  computed: {\n    isShowVisual: {\n      get: function get() {\n        var _this2 = this;\n\n        var show = this.$store.getters.isShowVisual;\n\n        if (show) {\n          this.loading = true;\n          fileApi.previewCsv({\n            nodeId: this.node_id,\n            graphId: this.graphId,\n            transit: true\n          }).then(function (res) {\n            var csv = res.data;\n            csv.forEach(function (row, i) {\n              csv[i] = [i + 1].concat(row);\n            });\n            _this2.csv = csv;\n            _this2.pid = res.pid;\n            _this2.index = ['\\\\'].concat(res.index);\n            _this2.loading = false;\n          }).catch(function (err) {\n            _this2.loading = false;\n            _this2.isShowPreview = false;\n            Notification({\n              title: '错误',\n              message: '文件不存在或文件路径不正确',\n              type: 'error',\n              duration: 3000\n            });\n          });\n        }\n\n        return show;\n      },\n      set: function set(val) {\n        this.$store.commit('app/SET_ISSHOWVISUAL', val);\n      }\n    },\n    isShowEcharts: {\n      get: function get() {\n        return this.$store.getters.isShowEcharts;\n      },\n      set: function set(val) {\n        this.$store.commit('app/SET_ISSHOWECHARTS', val);\n      }\n    },\n    graphId: {\n      get: function get() {\n        return this.$route.params.id || this.$store.getters.graphId;\n      }\n    }\n  },\n  methods: {\n    handleSelectionChange: function handleSelectionChange(val, row) {\n      this.multipleSelection = val;\n      var canProceed = true;\n      val.forEach(function (row) {\n        if (typeof row[1] == 'string') {\n          canProceed = false;\n        }\n      });\n      this.canProceed = canProceed;\n    }\n  }\n};",null]}