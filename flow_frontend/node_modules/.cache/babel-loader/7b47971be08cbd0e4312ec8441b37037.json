{"remainingRequest":"W:\\ArtificialIntelligenceOpenPlatformOfNankaiUniversity\\MachineLearningAlgorithmPlatform\\flow_frontend\\node_modules\\babel-loader\\lib\\index.js!W:\\ArtificialIntelligenceOpenPlatformOfNankaiUniversity\\MachineLearningAlgorithmPlatform\\flow_frontend\\node_modules\\eslint-loader\\index.js??ref--13-0!W:\\ArtificialIntelligenceOpenPlatformOfNankaiUniversity\\MachineLearningAlgorithmPlatform\\flow_frontend\\src\\permission.js","dependencies":[{"path":"W:\\ArtificialIntelligenceOpenPlatformOfNankaiUniversity\\MachineLearningAlgorithmPlatform\\flow_frontend\\src\\permission.js","mtime":1592804685691},{"path":"W:\\ArtificialIntelligenceOpenPlatformOfNankaiUniversity\\MachineLearningAlgorithmPlatform\\flow_frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"W:\\ArtificialIntelligenceOpenPlatformOfNankaiUniversity\\MachineLearningAlgorithmPlatform\\flow_frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"W:\\ArtificialIntelligenceOpenPlatformOfNankaiUniversity\\MachineLearningAlgorithmPlatform\\flow_frontend\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"W:\\\\ArtificialIntelligenceOpenPlatformOfNankaiUniversity\\\\MachineLearningAlgorithmPlatform\\\\flow_frontend\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport router from \"./router\";\nimport store from \"./store\";\nimport { Message } from 'element-ui';\nimport auth from '@/utils/auth';\nvar whiteList = ['/login', '/register']; // no redirect whitelist\n\nrouter.beforeEach(\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee(to, from, next) {\n    var hasToken;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            hasToken = auth.getToken();\n\n            if (!hasToken) {\n              _context.next = 17;\n              break;\n            }\n\n            if (!(to.path === '/login' || to.path === '/register')) {\n              _context.next = 6;\n              break;\n            }\n\n            next({\n              path: '/'\n            });\n            _context.next = 15;\n            break;\n\n          case 6:\n            _context.prev = 6;\n            next();\n            _context.next = 15;\n            break;\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](6);\n            _context.next = 14;\n            return store.dispatch('user/Logout');\n\n          case 14:\n            next(\"/login?redirect=\".concat(to.path));\n\n          case 15:\n            _context.next = 18;\n            break;\n\n          case 17:\n            if (whiteList.indexOf(to.path) !== -1) {\n              // in the free login whitelist, go directly\n              next();\n            } else {\n              // other pages that do not have permission to access are redirected to the login page.\n              next(\"/login?redirect=\".concat(to.path));\n            }\n\n          case 18:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[6, 10]]);\n  }));\n\n  return function (_x, _x2, _x3) {\n    return _ref.apply(this, arguments);\n  };\n}());",null]}