{"remainingRequest":"W:\\ArtificialIntelligenceOpenPlatformOfNankaiUniversity\\MachineLearningAlgorithmPlatform\\flow_frontend\\node_modules\\babel-loader\\lib\\index.js!W:\\ArtificialIntelligenceOpenPlatformOfNankaiUniversity\\MachineLearningAlgorithmPlatform\\flow_frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!W:\\ArtificialIntelligenceOpenPlatformOfNankaiUniversity\\MachineLearningAlgorithmPlatform\\flow_frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!W:\\ArtificialIntelligenceOpenPlatformOfNankaiUniversity\\MachineLearningAlgorithmPlatform\\flow_frontend\\src\\components\\Minimap\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"W:\\ArtificialIntelligenceOpenPlatformOfNankaiUniversity\\MachineLearningAlgorithmPlatform\\flow_frontend\\src\\components\\Minimap\\index.vue","mtime":1592804685687},{"path":"W:\\ArtificialIntelligenceOpenPlatformOfNankaiUniversity\\MachineLearningAlgorithmPlatform\\flow_frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"W:\\ArtificialIntelligenceOpenPlatformOfNankaiUniversity\\MachineLearningAlgorithmPlatform\\flow_frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"W:\\ArtificialIntelligenceOpenPlatformOfNankaiUniversity\\MachineLearningAlgorithmPlatform\\flow_frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"W:\\ArtificialIntelligenceOpenPlatformOfNankaiUniversity\\MachineLearningAlgorithmPlatform\\flow_frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"W:\\\\ArtificialIntelligenceOpenPlatformOfNankaiUniversity\\\\MachineLearningAlgorithmPlatform\\\\flow_frontend\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Minimap from '@antv/g6/build/minimap';\nimport eventBus from '@/utils/eventBus';\nimport { mapGetters } from 'vuex';\nexport default {\n  data: function data() {\n    return {\n      minimap: null,\n      graph: null\n    };\n  },\n  computed: _objectSpread({}, mapGetters(['detailWidth', 'canvasWidth', 'canvasHeight'])),\n  watch: {// detailWidth(width) {\n    //   let height = Math.floor((width * this.canvasHeight) / this.canvasWidth)\n    //   console.log(width, height);\n    //   const cfgs = {\n    //     size: [width, height],\n    //     container: 'minimap'\n    //   }\n    //   this.minimap = new Minimap({ ...cfgs })\n    // }\n  },\n  created: function created() {\n    this.bindEvent();\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    this.$nextTick(function () {\n      _this.initMinmap();\n    });\n  },\n  methods: {\n    initMinmap: function initMinmap() {\n      var width = this.detailWidth;\n      var height = this.detailWidth * this.canvasHeight / this.canvasWidth;\n      height = 150;\n      var cfgs = {\n        size: [width, height],\n        container: 'minimap'\n      };\n      this.minimap = new Minimap(_objectSpread({}, cfgs));\n    },\n    bindEvent: function bindEvent() {\n      var _this2 = this;\n\n      eventBus.$on('afterAddPage', function (page) {\n        _this2.graph = page.graph;\n\n        _this2.bindPage();\n      });\n    },\n    bindPage: function bindPage() {\n      if (!this.minimap || !this.graph) {\n        return;\n      }\n\n      this.graph.addPlugin(this.minimap);\n    }\n  }\n};",null]}