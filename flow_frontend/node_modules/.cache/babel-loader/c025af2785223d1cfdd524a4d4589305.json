{"remainingRequest":"W:\\ArtificialIntelligenceOpenPlatformOfNankaiUniversity\\MachineLearningAlgorithmPlatform\\flow_frontend\\node_modules\\babel-loader\\lib\\index.js!W:\\ArtificialIntelligenceOpenPlatformOfNankaiUniversity\\MachineLearningAlgorithmPlatform\\flow_frontend\\node_modules\\eslint-loader\\index.js??ref--13-0!W:\\ArtificialIntelligenceOpenPlatformOfNankaiUniversity\\MachineLearningAlgorithmPlatform\\flow_frontend\\src\\utils\\index.js","dependencies":[{"path":"W:\\ArtificialIntelligenceOpenPlatformOfNankaiUniversity\\MachineLearningAlgorithmPlatform\\flow_frontend\\src\\utils\\index.js","mtime":1592804685696},{"path":"W:\\ArtificialIntelligenceOpenPlatformOfNankaiUniversity\\MachineLearningAlgorithmPlatform\\flow_frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"W:\\ArtificialIntelligenceOpenPlatformOfNankaiUniversity\\MachineLearningAlgorithmPlatform\\flow_frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"W:\\ArtificialIntelligenceOpenPlatformOfNankaiUniversity\\MachineLearningAlgorithmPlatform\\flow_frontend\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport merge from 'lodash/merge';\nimport pick from 'lodash/pick';\nimport uniqueId from 'lodash/uniqueId';\nimport upperFirst from 'lodash/upperFirst';\n\nvar toQueryString = function toQueryString(obj) {\n  return Object.keys(obj).map(function (key) {\n    return \"\".concat(encodeURIComponent(key), \"=\").concat(encodeURIComponent(obj[key]));\n  }).join('&');\n};\n\nvar addListener = function addListener(target, eventName, handler) {\n  if (typeof handler === 'function') target.on(eventName, handler);\n};\n\nvar getBox = function getBox(x, y, width, height) {\n  var x1 = x + width < x ? x + width : x;\n  var x2 = x + width > x ? x + width : x;\n  var y1 = y + height < y ? y + height : y;\n  var y2 = y + height > y ? y + height : y;\n  return {\n    x1: x1,\n    x2: x2,\n    y1: y1,\n    y2: y2\n  };\n};\n\nexport { merge, pick, toQueryString, uniqueId, upperFirst, addListener, getBox };",null]}