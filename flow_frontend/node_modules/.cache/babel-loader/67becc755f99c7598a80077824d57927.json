{"remainingRequest":"W:\\ArtificialIntelligenceOpenPlatformOfNankaiUniversity\\MachineLearningAlgorithmPlatform\\flow_frontend\\node_modules\\babel-loader\\lib\\index.js!W:\\ArtificialIntelligenceOpenPlatformOfNankaiUniversity\\MachineLearningAlgorithmPlatform\\flow_frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!W:\\ArtificialIntelligenceOpenPlatformOfNankaiUniversity\\MachineLearningAlgorithmPlatform\\flow_frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!W:\\ArtificialIntelligenceOpenPlatformOfNankaiUniversity\\MachineLearningAlgorithmPlatform\\flow_frontend\\src\\views\\project\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"W:\\ArtificialIntelligenceOpenPlatformOfNankaiUniversity\\MachineLearningAlgorithmPlatform\\flow_frontend\\src\\views\\project\\index.vue","mtime":1592813909479},{"path":"W:\\ArtificialIntelligenceOpenPlatformOfNankaiUniversity\\MachineLearningAlgorithmPlatform\\flow_frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"W:\\ArtificialIntelligenceOpenPlatformOfNankaiUniversity\\MachineLearningAlgorithmPlatform\\flow_frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"W:\\ArtificialIntelligenceOpenPlatformOfNankaiUniversity\\MachineLearningAlgorithmPlatform\\flow_frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"W:\\ArtificialIntelligenceOpenPlatformOfNankaiUniversity\\MachineLearningAlgorithmPlatform\\flow_frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/web.dom.iterable\";\nimport _defineProperty from \"W:\\\\ArtificialIntelligenceOpenPlatformOfNankaiUniversity\\\\MachineLearningAlgorithmPlatform\\\\flow_frontend\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport graphApi from '@/api/graph';\nimport userApi from '@/api/user';\nimport { Notification } from 'element-ui';\nimport { mapGetters } from 'vuex';\nexport default {\n  name: 'Project',\n  data: function data() {\n    return {\n      // 查询类\n      listQuery: {\n        page: 1,\n        page_size: 10\n      },\n      count: 0,\n      isShowDialog: false,\n      project_list: [],\n      loading: false,\n      form: {\n        projectName: ''\n      },\n      rules: {\n        projectName: [{\n          required: true,\n          message: '请输入项目名称',\n          trigger: 'blur'\n        }]\n      },\n      multipleSelection: []\n    };\n  },\n  computed: _objectSpread({}, mapGetters(['token', 'username'])),\n  filters: {\n    statusFilter: function statusFilter(status) {\n      switch (status) {\n        case 'init':\n          return '初始化';\n\n        case 'loading':\n          return '运行中';\n\n        case 'complete':\n          return '已完成';\n      }\n    }\n  },\n  created: function created() {\n    this.getGraphs();\n  },\n  methods: {\n    getGraphs: function getGraphs() {\n      var _this = this;\n\n      this.loading = true;\n      graphApi.getGraphs(this.listQuery).then(function (res) {\n        _this.count = res.count;\n        _this.project_list = res.res;\n        _this.loading = false;\n      }).catch(function (err) {\n        _this.loading = false;\n      });\n    },\n    pageSizeChange: function pageSizeChange(val) {\n      this.listQuery.page_size = val;\n      this.listQuery.page = 1;\n      this.getGraphs();\n    },\n    pageCurrentChange: function pageCurrentChange(val) {\n      this.listQuery.page = val;\n      this.getGraphs();\n    },\n    createProject: function createProject() {\n      var _this2 = this;\n\n      this.$refs['ruleForm'].validate(function (valid) {\n        if (valid) {\n          graphApi.createGraph(_this2.form).then(function (res) {\n            Notification({\n              title: '成功',\n              message: '创建项目成功',\n              type: 'success',\n              duration: 3000\n            });\n\n            _this2.getGraphs();\n\n            _this2.isShowDialog = false;\n            _this2.form.projectName = '';\n            _this2.form.owner = '';\n          }).catch(function (err) {\n            Notification({\n              title: '错误',\n              message: err.data,\n              type: 'error',\n              duration: 3000\n            });\n          });\n        }\n      });\n    },\n    handleSelectionChange: function handleSelectionChange(val) {\n      var multipleSelection = [];\n      val.forEach(function (item) {\n        multipleSelection.push(item.id);\n      });\n      this.multipleSelection = multipleSelection;\n      console.log(this.multipleSelection);\n    },\n    deleteProjects: function deleteProjects() {\n      var _this3 = this;\n\n      this.$confirm('此操作将永久删除该项目, 是否继续?', '提示', {\n        confirmButtonText: '确 定',\n        cancelButtonText: '取 消',\n        type: 'warning'\n      }).then(function () {\n        return graphApi.deleteGraphs({\n          projectIds: _this3.multipleSelection\n        });\n      }).then(function (res) {\n        Notification({\n          title: '成功',\n          message: '文件移除成功',\n          type: 'success',\n          duration: 3000\n        });\n\n        _this3.getGraphs();\n      }).catch(function (err) {\n        _this3.$message({\n          type: err == 'cancel' ? 'info' : 'error',\n          message: err == 'cancel' ? '已取消删除' : err.data\n        });\n      });\n    }\n  }\n};",null]}