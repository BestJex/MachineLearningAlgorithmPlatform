{"remainingRequest":"W:\\ArtificialIntelligenceOpenPlatformOfNankaiUniversity\\MachineLearningAlgorithmPlatform\\flow_frontend\\node_modules\\babel-loader\\lib\\index.js!W:\\ArtificialIntelligenceOpenPlatformOfNankaiUniversity\\MachineLearningAlgorithmPlatform\\flow_frontend\\node_modules\\eslint-loader\\index.js??ref--13-0!W:\\ArtificialIntelligenceOpenPlatformOfNankaiUniversity\\MachineLearningAlgorithmPlatform\\flow_frontend\\src\\api\\file.js","dependencies":[{"path":"W:\\ArtificialIntelligenceOpenPlatformOfNankaiUniversity\\MachineLearningAlgorithmPlatform\\flow_frontend\\src\\api\\file.js","mtime":1592805455103},{"path":"W:\\ArtificialIntelligenceOpenPlatformOfNankaiUniversity\\MachineLearningAlgorithmPlatform\\flow_frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"W:\\ArtificialIntelligenceOpenPlatformOfNankaiUniversity\\MachineLearningAlgorithmPlatform\\flow_frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"W:\\ArtificialIntelligenceOpenPlatformOfNankaiUniversity\\MachineLearningAlgorithmPlatform\\flow_frontend\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import request from '@/utils/request';\nexport default {\n  deleteFile: function deleteFile(data) {\n    return request({\n      url: '/upload_file',\n      method: 'delete',\n      params: data\n    });\n  },\n  isFilenamehValid: function isFilenamehValid(data) {\n    return request({\n      url: '/is_filename_valid',\n      method: 'POST',\n      data: data\n    });\n  },\n  getProjectFileList: function getProjectFileList(data) {\n    return request({\n      url: '/project_file_list',\n      method: 'GET',\n      params: data\n    });\n  },\n  previewCsv: function previewCsv(data) {\n    return request({\n      url: '/preview_csv',\n      method: 'GET',\n      params: data\n    });\n  },\n  previewEcharts: function previewEcharts(data) {\n    return request({\n      url: '/preview_echarts',\n      method: 'GET',\n      params: data\n    });\n  },\n  isPreviewValid: function isPreviewValid(data) {\n    return request({\n      url: '/is_preview_valid',\n      method: 'GET',\n      params: data\n    });\n  },\n  createNode: function createNode(data) {\n    return request({\n      url: '/create_node',\n      method: 'post',\n      data: data\n    });\n  }\n};",null]}